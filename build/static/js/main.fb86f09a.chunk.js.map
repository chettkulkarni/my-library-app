{"version":3,"sources":["components/books.js","components/navbar.js","components/leftbar.js","components/index.js","components/searchbar.js","components/search.js","components/bookinfodesc.js","components/bookinfo.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["Books","books","Container","Row","map","book","index","Col","md","CardDeck","Card","style","width","CardBody","CardTitle","title","CardText","authors","average_rating","bookID","language_code","ratings_count","text_reviews_count","to","Navbar_home","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","NavDropdown","Item","Divider","eventKey","LeftBar","minHeight","state","this","fetch","then","res","json","data","console","log","a","i","push","setState","catch","Component","SearchBar","props","Form","FormGroup","Label","for","Input","type","name","placeholder","Button","search","bookId","window","location","url2","BookInfoDesc","Jumbotron","BookInfo","pathname","split","main","path","exact","component","bookinfo","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fb86f09a.chunk.js","sourcesContent":["import React from 'react'\n// import Card from 'react-bootstrap/Card';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { Card, CardImg, CardBody, CardTitle, CardText, Button } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\n\n   const Books = ({ books }) => {\n   return (\n       <div>\n         <center><h1>Books List</h1></center>\n        <Container>\n          <Row>\n         \n         {books.map((book,index) => (\n\n         <Col md=\"auto\">\n         <CardDeck>\n         <Card  style={{width: '20rem' }}>\n          <CardBody>\n            <CardTitle>{book.title}</CardTitle>\n            <CardText><p><b>Author:</b>{book.authors}</p>\n                    <p><b>Rating:</b>{book.average_rating}</p>\n                    <p><b>BookID:</b>{book.bookID}</p>\n                    <p><b>Language Code:</b>{book.language_code}</p>\n                    <p><b>Rating Count:</b>{book.ratings_count}</p>\n                    <p><b>Text Reviews Count:</b>{book.text_reviews_count}</p>\n              </CardText>\n            <Link to={`/bookinfo/${book.bookID}`} > Click to View More</Link>\n            </CardBody>\n          </Card>\n          </CardDeck>\n          </Col>\n         ))}\n\n         </Row>\n        </Container>\n       </div>\n     )\n   };\n   export default Books\n\n\n\n\n   \n\n","import React from 'react'\nimport Card from 'react-bootstrap/Card';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Nav from 'react-bootstrap/Nav';\n\n\nconst Navbar_home = ({ books }) => {\n    return (\n<Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n  <Navbar.Brand href=\"/\">LIMS- Library Management Platform</Navbar.Brand>\n  <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n  <Navbar.Collapse id=\"responsive-navbar-nav\">\n    <Nav className=\"mr-auto\">\n      <Nav.Link href=\"/search?title=xxyyzz&authors=zzzyymm&language=abbcc\">Search</Nav.Link>\n      <Nav.Link href=\"#pricing\">Dummy</Nav.Link>\n      <NavDropdown title=\"Dummy\" id=\"collasible-nav-dropdown\">\n        <NavDropdown.Item href=\"#action/3.1\">Dummy</NavDropdown.Item>\n        <NavDropdown.Item href=\"#action/3.2\">Dummy</NavDropdown.Item>\n        <NavDropdown.Divider />\n        <NavDropdown.Item href=\"#action/3.4\">Dummy</NavDropdown.Item>\n      </NavDropdown>\n    </Nav>\n    <Nav>\n      <Nav.Link href=\"#deets\">Dummy</Nav.Link>\n      <Nav.Link eventKey={2} href=\"#memes\">\n        Dummy\n      </Nav.Link>\n    </Nav>\n    </Navbar.Collapse>\n    </Navbar>\n    )\n  };\nexport default Navbar_home","import React from 'react'\nimport Card from 'react-bootstrap/Card';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Nav from 'react-bootstrap/Nav';\n\n\nconst LeftBar = ({ books }) => {\n    return (\n<div>\n<Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" className=\"flex-column\">\n\n    <Nav className=\"mr-auto\" style={{ minHeight : 100 + \"vh\" }}>\n      <li><Nav.Link href=\"/features\">Dummy</Nav.Link>\n      <Nav.Link href=\"/pricing\">Dummy</Nav.Link></li>\n    </Nav>\n    </Navbar>\n</div>\n    )\n  };\nexport default LeftBar\n\n//className=\"flex-column\"","import React, { Component } from 'react';\nimport '../App.css';\nimport {BrowserRouter} from 'react-router-dom';\nimport Books from './books';\nimport Navbar_home from './navbar';\nimport Leftbar from './leftbar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport SearchField from \"react-search-field\";\n\nclass index extends Component {\n\trender() {\n\t  return (\n\t\t<div>\n\t\t   <Navbar_home />\n\n\n\t\t  <Row>\n\t\t\t<Leftbar/>\n\t\t  <Books books={this.state.books} />\n\t\t  </Row> \n\t\t  </div>\n\t\t\t);\n\t}\n\tstate = {\n\t  books: []\n\t}\n  \n\tcomponentDidMount() {\n\t  let url = 'http://ec2-52-53-153-16.us-west-1.compute.amazonaws.com/v1/books?title=J.R.R. Tolkien';\n\t      fetch(url)\n\t      .then(res => res.json())\n\t      .then(data => {\n\t        console.log(data)\n\t        const a=[]\n\t        for (var i in data){\n\t        a.push(data[i])\n\t      }\n\t      console.log(a)\n\t      this.setState({ books: a })\n\t      })\n\t      .catch(console.log)\n\t    }\n  \n  \n  }\n  //http://ec2-52-53-153-16.us-west-1.compute.amazonaws.com/v1/books\n  //Export the App component so that it can be used in index.js\n  export default index;","import React from 'react';\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\n\nconst SearchBar = (props) => {\n  return (\n    <Form>\n      <FormGroup>\n        <Label for=\"title\">Book</Label>\n        <Input type=\"textarea\" name=\"title\" id=\"bookname\" placeholder=\"search book name\" />\n      </FormGroup>\n\n      <FormGroup>\n        <Label for=\"AuthorName\">Author</Label>\n        <Input type=\"textarea\" name=\"authors\" id=\"authorname\" placeholder=\"search author name\" />\n      </FormGroup>\n\n\n      <FormGroup>\n        <Label for=\"AuthorName\">LanguageCode</Label>\n        <Input type=\"textarea\" name=\"language\" id=\"language\" placeholder=\"Language Code\" />\n      </FormGroup>\n      <Button>Submit</Button>\n    </Form>\n  );\n}\n\nexport default SearchBar;","import React, { Component } from 'react';\nimport '../App.css';\nimport {BrowserRouter} from 'react-router-dom';\nimport Books from './books';\nimport SearchBar from './searchbar';\nimport Navbar_home from './navbar';\nimport Leftbar from './leftbar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\n\nclass search extends Component {\n\trender() {\n\t  return (\n\t\t<div>\n\t\t   <Navbar_home />\n\t\t   \n\n\t\t  <Row>\n\t\t\t<Leftbar/>\n\t\t\t<Col>\n\t\t\t<SearchBar/>\n\t\t\t<Books books={this.state.books} />\n\t\t\t</Col>\n\t\t  </Row> \n\t\t  </div>\n\t\t\t);\n\t}\n\tstate = {\n\t  books: []\n\t}\n  \n\tcomponentDidMount() {\n\t\tvar bookId = window.location.search\n\t\tconsole.log('bookid',bookId)\n\t\t\n\t\tif (bookId === 'undefined' || bookId === null ||bookId === ' '){\n\t\t\tconsole.log('in here')\n\t\t\tvar url2='http://ec2-52-53-153-16.us-west-1.compute.amazonaws.com/v1/books/1';\n\t\t}\n\t\telse{\n\t\tvar url2='http://ec2-52-53-153-16.us-west-1.compute.amazonaws.com/v1/books'+bookId;\n\t\t}\n\t\tconsole.log(url2)\n\t\t\n\t  let url = url2;\n\t      fetch(url)\n\t      .then(res => res.json())\n\t      .then(data => {\n\t        console.log(data)\n\t        const a=[]\n\t        for (var i in data){\n\t        a.push(data[i])\n\t      }\n\t      console.log(a)\n\t      this.setState({ books: a })\n\t      })\n\t      .catch(console.log)\n\t    }\n  \n  \n  }\n  //http://ec2-52-53-153-16.us-west-1.compute.amazonaws.com/v1/books\n  //http://ec2-52-53-153-16.us-west-1.compute.amazonaws.com/v1/books\n  //http://ec2-52-53-153-16.us-west-1.compute.amazonaws.com/v1/books/authors?=J.K.%20Rowling-Mary%20GrandPr%C3%A9\n  //Export the App component so that it can be used in index.js\n  export default search;\n","import React from 'react'\n// import Card from 'react-bootstrap/Card';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { Card, CardImg, CardBody, CardTitle, CardText, Button,Jumbotron } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\n   const BookInfoDesc = ({ books }) => {\n     return (\n       <div>\n        \n        <Container>\n          <Row>\n         \n         {\n           books.map((book,index) => (\n\n          <div >\n               <Jumbotron>\n                    <h3 className=\"display-3\">{book.title}</h3>\n                    {/* <p className=\"lead\"> Author:{book.authors}</p> */}\n                    <Link to={`/search/?title=&authors=${book.authors}&language=`} > <b>Author: </b>{book.authors}</Link>\n                    <p className=\"lead\"><b>Rating:</b>{book.average_rating}</p>\n                    <p className=\"lead\"><b>BookID:</b>{book.bookID}</p>\n                    <p className=\"lead\"><b>Language Code:</b>{book.language_code}</p>\n                    <p className=\"lead\"><b>Rating Count:</b>{book.ratings_count}</p>\n                    <p className=\"lead\"><b>Text Reviews Count:</b>{book.text_reviews_count}</p>\n                </Jumbotron>\n          </div>\n        \n        ))}\n\n         </Row>\n        </Container>\n       </div>\n     )\n   };\n   export default BookInfoDesc\n\n\n\n\n   \n\n","import React, { Component } from 'react';\nimport '../App.css';\n// import {BrowserRouter} from 'react-router-dom';\nimport BookInfoDesc from './bookinfodesc';\nimport Navbar_home from './navbar';\nimport Leftbar from './leftbar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Row from 'react-bootstrap/Row';\n// import Col from 'react-bootstrap/Col';\n\nclass BookInfo extends Component {\n\trender() {\n\t  return (\n\t\t<div>\n\t\t   <Navbar_home />\n\t\t  <Row>\n\t\t\t<Leftbar/>\n\t\t  <BookInfoDesc books={this.state.books} />\n\t\t  </Row> \n\t\t  </div>\n\t\t\t);\n\t}\n\tstate = {\n\t  books: []\n\t}\n  \n\tcomponentDidMount() {\n\t\tvar bookId = window.location.pathname.split(\"/\")[2]\n\t  let url = 'http://ec2-52-53-153-16.us-west-1.compute.amazonaws.com/v1/books/' + bookId;\n\t      fetch(url)\n\t      .then(res => res.json())\n\t      .then(data => {\n\t        console.log(data)\n\t        const a=[]\n\t    \n\t        a.push(data)\n\t      \n\t      console.log(a)\n\t      this.setState({ books: a })\n\t      })\n\t      .catch(console.log)\n\t    }\n  \n  \n  }\n  //http://ec2-52-53-153-16.us-west-1.compute.amazonaws.com/v1/books\n  \n  //Export the App component so that it can be used in index.js\n  export default BookInfo;","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport index from './index';\nimport search from './search';\nimport bookinfo from './bookinfo';\n\nclass main extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t<Route path=\"/\" exact={true} component={index}/>\n\t\t\t<Route path=\"/search\" component={search}/>\n\t\t\t<Route path=\"/bookinfo\" component={bookinfo}/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default main;\n\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport Main from './components/main';\nimport {BrowserRouter} from 'react-router-dom';\nimport Books from './components/books';\nimport Navbar_home from './components/navbar';\nimport Leftbar from './components/leftbar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\n//App Component\nclass App extends Component {\n  render() {\n    return (\n      <div>\n      <BrowserRouter>\n        <Main />\n        </BrowserRouter>\n        </div>\n          );\n  }\n\n  // componentDidMount() {\n  //   let url = 'http://ec2-52-53-153-16.us-west-1.compute.amazonaws.com/v1/books?authors=J.K.%20Rowling-Mary%20GrandPr';\n  //       fetch(url)\n  //       .then(res => res.json())\n  //       .then(data => {\n  //         console.log(data)\n  //         const a=[]\n  //         for (var i in data){\n  //         a.push(data[i])\n  //       }\n  //       console.log(a)\n  //       this.setState({ books: a })\n  //       })\n  //       .catch(console.log)\n  //     }\n\n\n}\n//http://ec2-52-53-153-16.us-west-1.compute.amazonaws.com/v1/books\n//Export the App component so that it can be used in index.js\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}